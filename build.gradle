plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.soap'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	provided {
		// This configuration is typically used for dependencies that are provided by the runtime environment
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.ws:spring-ws-core:3.1.1'
    // Add these 2 dependencies for XJCTask
    provided 'com.sun.xml.bind:jaxb-impl:2.3.3'
    provided 'com.sun.xml.bind:jaxb-xjc:2.3.3'


	// JAXB and JAX-WS dependencies
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.3'
	implementation 'javax.xml.ws:jaxws-api:2.3.1'
	implementation 'com.sun.xml.ws:jaxws-rt:2.3.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}



//def generatedSrcDir = file("${buildDir}/generated-src")
def generatedSrcDir = file("${buildDir}/generated-sources")


task jaxb {
    doLast {
        generatedSrcDir.mkdirs()
        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.provided.asPath)

        ant.xjc(destdir: generatedSrcDir) {
            schema(dir: 'src/main/resources/xsd', includes: '**/*.xsd')
        }

        ant.xjc(destdir: generatedSrcDir) { // Use xjc again for WSDL
            schema(dir: 'src/main/resources/wsdl', includes: '**/*.wsdl')
            arg(value: "-wsdl")
        }
    }
}

// Create the source set for the generated Java files
task generateSources {
    dependsOn jaxb
}

// Add the generated source directory to the main source set
//sourceSets.main.java.srcDirs += generateSources.ext.generatedSrcDir
sourceSets.main.java.srcDirs += generatedSrcDir


// Make sure the generated sources are compiled before other Java sources
compileJava.dependsOn generateSources

tasks.named('compileJava') {
    dependsOn 'jaxb'
    // Change this
    // source += generateSources.ext.generatedSrcDir
    // To this
    source += fileTree(generatedSrcDir)
}


tasks.named('test') {
    useJUnitPlatform()
}
